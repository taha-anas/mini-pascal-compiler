#ifndef COMPILA_TOKENS_H
#define COMPILA_TOKENS_H


/**************DECLARATION DES TOKENS***************************/
typedef enum {
    ID_TOKEN,NUM_TOKEN,PLUS_TOKEN,MOINS_TOKEN,MULT_TOKEN,DIV_TOKEN,EG_TOKEN,DIFF_TOKEN,INF_TOKEN,SUP_TOKEN,INFG_TOKEN,
    SUPEG_TOKEN,VIR_TOKEN,PT_TOKEN,PTVIR_TOKEN,AFF_TOKEN,BEGIN_TOKEN,END_TOKEN,IF_TOKEN,THEN_TOKEN,WHILE_TOKEN,
    DO_TOKEN,READ_TOKEN,WRITE_TOKEN,CONST_TOKEN,PROGRAM_TOKEN,VAR_TOKEN,PO_TOKEN,PF_TOKEN,EOF_TOKEN,ERREUR_TOKEN,
    CASE_TOKEN,OF_TOKEN,ELSE_TOKEN,REPEAT_TOKEN, UNTIL_TOKEN,FOR_TOKEN,TO_TOKEN,DOWNTO_TOKEN

} Token ;

// string format of tokens
char *TOKEN_CLE[]={"ID_TOKEN","NUM_TOKEN","PLUS_TOKEN","MOINS_TOKEN","MULT_TOKEN","DIV_TOKEN","EG_TOKEN","DIFF_TOKEN","INF_TOKEN",
                   "SUP_TOKEN","INFG_TOKEN","SUPEG_TOKEN","VIR_TOKEN","PT_TOKEN","PTVIR_TOKEN","AFF_TOKEN","BEGIN_TOKEN","END_TOKEN","IF_TOKEN",
                   "THEN_TOKEN","WHILE_TOKEN","DO_TOKEN","READ_TOKEN","WRITE_TOKEN","CONST_TOKEN","PROGRAM_TOKEN","VAR_TOKEN","PO_TOKEN","PF_TOKEN",
                   "EOF_TOKEN","ERREUR_TOKEN","CASE_TOKEN","OF_TOKEN","ELSE_TOKEN","REPEAT_TOKEN","UNTIL_TOKEN","FOR_TOKEN","TO_TOKEN","DOWNTO_TOKEN"
};



#endif //COMPILA_TOKENS_H
